
const QUANT_MASK: i32 = 0xf;
const BIAS: i32       = 0x84;
const SEG_MASK: i32   = 0x70;
const SEG_SHIFT: i32  = 4;

fn ulaw2linear(u_val: i16) -> i16 {
    
    u_val = !u_val;

    t: i16 = ((u_val & QUANT_MASK) << 3) + BIAS;
    t <<= ((u_val as u32) & SEG_MASK) >> SEG_SHIFT;
    if (u_val & SIGN_BIT) {
        t = (BIAS - t);
    } else {
        t = (t - BIAS)
    }
    return t;
}

#[cfg(test)]
mod tests {
    #[test]
    fn it_works() {
        assert_eq!(2 + 2, 4);
    }
}
